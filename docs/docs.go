// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/channel": {
            "post": {
                "description": "Creates a new channel based on the provided channel data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channel"
                ],
                "summary": "Create a new channel",
                "parameters": [
                    {
                        "description": "Channel request body",
                        "name": "channel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Channel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Channel created successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.Channel"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/channel/group/{group}": {
            "get": {
                "description": "Retrieves a list of channels associated with a specific group ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channel"
                ],
                "summary": "Get channels by group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channels retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Channel"
                            }
                        }
                    },
                    "400": {
                        "description": "Group ID is required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Channels not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/channel/platform/{platform}": {
            "get": {
                "description": "Retrieves a list of channels associated with a specific platform ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channel"
                ],
                "summary": "Get channels by platform",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Platform ID",
                        "name": "platform",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channels retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Channel"
                            }
                        }
                    },
                    "400": {
                        "description": "Platform ID is required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Channels not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/channel/{id}": {
            "get": {
                "description": "Retrieves a channel by its unique identifier.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get channel by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channel retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.Channel"
                        }
                    },
                    "400": {
                        "description": "Channel ID is required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Channel not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a channel by its unique identifier.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channel"
                ],
                "summary": "Delete channel by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channel deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Channel ID is required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Channel not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notification": {
            "post": {
                "description": "Creates a new notification based on the provided notification data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "Create a new notification",
                "parameters": [
                    {
                        "description": "Notification request body",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/value.NotificationInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification sent successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notification/{id}": {
            "get": {
                "description": "Retrieves a notification by its unique identifier.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "Get notification by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/value.NotificationInput"
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/token": {
            "post": {
                "description": "Creates a new authentication token based on the provided user data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create a new token",
                "parameters": [
                    {
                        "description": "Token request body",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Token"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Token created successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.Token"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/token/{user}": {
            "get": {
                "description": "Retrieves the authentication token for a specified user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get token by user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User identifier",
                        "name": "user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.Token"
                        }
                    },
                    "400": {
                        "description": "User parameter is required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Token not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the authentication token for a specified user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Delete token by user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User identifier",
                        "name": "user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "User parameter is required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Token not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Channel": {
            "type": "object",
            "required": [
                "group",
                "platform",
                "target_id"
            ],
            "properties": {
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "platform": {
                    "type": "string"
                },
                "target_id": {
                    "type": "string"
                }
            }
        },
        "entity.Token": {
            "type": "object",
            "required": [
                "admin_user"
            ],
            "properties": {
                "admin_user": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "value.Event": {
            "type": "object",
            "required": [
                "category",
                "cost_cents",
                "currency",
                "name",
                "receiver",
                "requester",
                "timestamp"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "cost_cents": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "receiver": {
                    "type": "string"
                },
                "requester": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "value.NotificationInput": {
            "type": "object",
            "required": [
                "channels",
                "event",
                "title",
                "uuid"
            ],
            "properties": {
                "channels": {
                    "type": "array",
                    "maxItems": 20,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                },
                "event": {
                    "$ref": "#/definitions/value.Event"
                },
                "message": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "localhost:9999",
	BasePath:         "/api/v1/",
	Schemes:          []string{},
	Title:            "Notify API",
	Description:      "Notify API Swagger Documentation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
