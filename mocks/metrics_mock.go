// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// Metrics is an autogenerated mock type for the Metrics type
type Metrics struct {
	mock.Mock
}

// ExposeHandler provides a mock function with no fields
func (_m *Metrics) ExposeHandler() gin.HandlerFunc {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ExposeHandler")
	}

	var r0 gin.HandlerFunc
	if rf, ok := ret.Get(0).(func() gin.HandlerFunc); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gin.HandlerFunc)
		}
	}

	return r0
}

// IncError provides a mock function with given fields: method, path, errType
func (_m *Metrics) IncError(method string, path string, errType string) {
	_m.Called(method, path, errType)
}

// IncRequest provides a mock function with given fields: method, path
func (_m *Metrics) IncRequest(method string, path string) {
	_m.Called(method, path)
}

// ObserveDuration provides a mock function with given fields: method, path, durationSeconds
func (_m *Metrics) ObserveDuration(method string, path string, durationSeconds float64) {
	_m.Called(method, path, durationSeconds)
}

// NewMetrics creates a new instance of Metrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *Metrics {
	mock := &Metrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
